{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/userReducer.js","pages/SignUpPage/SignUpPage.js","pages/LoginPage/LoginPage.js","pages/HomePage/HomePage.js","pages/AboutPage/AboutPage.js","redux/reducers/postReducer.js","pages/PostPage/PostPage.js","pages/CreateNewPostPage/CreateNewPostPage.js","pages/EditPostPage/EditPostPage.js","components/Header/Header.js","components/App/App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","userReducer","createSlice","name","initialState","user","reducers","setUser","state","action","payload","actions","getMe","dispatch","fetch","headers","authorization","then","res","json","getMeAPI","ok","data","ErrorMessage","styled","div","Form","form","SignUpPage","useState","nickname","setNickname","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","useDispatch","useSelector","store","users","push","onSubmit","e","preventDefault","method","body","JSON","stringify","signUp","message","response","toString","value","onChange","target","type","LoginPage","login","Root","PostContainer","PostTitle","Link","PostDate","Post","post","to","id","title","Date","createdAt","toLocaleString","HomePage","posts","setPosts","useEffect","map","Content","Text","Greeting","h1","Introduction","p","Image","AboutPage","postReducer","isLoadingPost","newPostResponse","setIsLoadingPost","setPost","setNewPostResponse","getPost","getPostAPI","catch","err","console","log","newPost","sendNewPost","editPost","editOldPost","deletePost","h2","PostCreatedAt","PostContent","PostPage","useParams","isLoading","onClick","Title","TitleInput","input","ContentTextarea","textarea","SubmitButton","button","CreateNewPostPage","setTitle","setBody","rows","EditPostPage","HeaderContainer","Brand","NavbarList","Nav","props","$active","LeftContainer","Header","location","useLocation","pathname","App","exact","path","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9feeffa8.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}&_expand=user`).then((res) =>\n    res.json()\n  );\n};\n\nexport const signUp = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const sendNewPost = ({ title, body }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const editOldPost = ({ id, title, body }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deletePost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n  }).then((res) => res.json());\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getMe as getMeAPI, login } from \"../../WebAPI\";\n\nexport const userReducer = createSlice({\n  name: \"users\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n});\n\nexport const { setUser } = userReducer.actions;\n\nexport const getMe = () => (dispatch) => {\n  return getMeAPI().then((res) => {\n    if (res.ok) {\n      dispatch(setUser(res.data));\n    }\n    return res;\n  });\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch(setUser(null));\n};\n\nexport default userReducer.reducer;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { signUp } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMe } from \"../../redux/reducers/userReducer\";\nimport styled from \"styled-components\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  width: 60%;\n  margin: 0 auto;\n  padding: 40px;\n  text-align: center;\n`;\n\nexport default function SignUpPage() {\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.users.user);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null); // 先把錯誤訊息抹掉\n    signUp(nickname, username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token); // 登入成功把 token 放到 localStorage\n\n      dispatch(getMe()) // 驗證身份\n        .then((response) => {\n          if (response.ok !== 1) {\n            setAuthToken(null);\n            return setErrorMessage(response.toString());\n          }\n          history.push(\"/\"); // 把頁面導向首頁\n        });\n    });\n  };\n\n  if (user) {\n    history.push(\"/\"); // 如果已經登入就把頁面導向首頁\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        暱稱:\n        <input value={nickname} onChange={(e) => setNickname(e.target.value)} />\n      </div>\n      <div>\n        帳號:\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        密碼:\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <button>註冊</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { login } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMe } from \"../../redux/reducers/userReducer\";\nimport styled from \"styled-components\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  width: 60%;\n  margin: 0 auto;\n  padding: 40px;\n  text-align: center;\n`;\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.users.user);\n\n  const handleSubmit = () => {\n    setErrorMessage(null); // 先把錯誤訊息抹掉\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token); // 登入成功把 token 放到 localStorage\n\n      dispatch(getMe()) // 驗證身份\n        .then((response) => {\n          if (response.ok !== 1) {\n            setAuthToken(null);\n            return setErrorMessage(response.toString());\n          }\n          history.push(\"/\"); // 把頁面導向首頁\n        });\n    });\n  };\n\n  if (user) {\n    history.push(\"/\"); // 如果已經登入就把頁面導向首頁\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        帳號:\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        密碼:\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\nimport { getPosts } from '../../WebAPI';\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object\n};\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts().then((posts) => setPosts(posts))\n  }, [])\n\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Post post={post} key={post.id} />\n      ))}\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\n\nconst Content = styled.div`\n  display: flex;\n  width: 800px;\n  margin: 0 auto;\n  padding: 40px 0;\n`;\n\nconst Text = styled.div`\n  flex: 2;\n  margin-right: 24px;\n`;\n\nconst Greeting = styled.h1`\n  margin: 0;\n`;\n\nconst Introduction = styled.p``;\n\nconst Image = styled.div`\n  flex: 1;\n  height: 300px;\n  background-image: url(\"https://mcdonalds.com.au/sites/mcdonalds.com.au/files/Product-Details-BigMac-mobile-201904.jpg\");\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Content>\n      <Text>\n        <Greeting>嗨~ 我是 YSKuo.</Greeting>\n        <Introduction>\n          我是 YSKuo 喜歡「無敵大麥克」，這是用來練習 React Router 及串 API\n          的作業。\n        </Introduction>\n      </Text>\n      <Image />\n    </Content>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getPost as getPostAPI,\n  sendNewPost,\n  editOldPost,\n  deletePost as deletePostAPI,\n} from \"../../WebAPI\";\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState: {\n    isLoadingPost: false,\n    post: \"\",\n    newPostResponse: null,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsLoadingPost,\n  setPost,\n  setNewPostResponse,\n} = postReducer.actions;\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostAPI(id)\n    .then((res) => {\n      dispatch(setPost(res[0]));\n      dispatch(setIsLoadingPost(false));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const newPost = (data) => (dispatch) => {\n  // return promise\n  return sendNewPost(data).then((res) => {\n    // return promise 這個方法解決發文頁面重複出現舊文的狀況\n    // 可以不用 dispatch(setNewPostResponse(res));\n    // newPostResponse 這個 state 其實也可省去\n    return res;\n  });\n};\n\nexport const editPost = (data) => (dispatch) => {\n  return editOldPost(data).then((res) => {\n    return res;\n  });\n};\n\nexport const deletePost = (data) => (dispatch) => {\n  return deletePostAPI(data).then((res) => {\n    return res;\n  });\n};\n\nexport default postReducer.reducer;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getPost, deletePost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Post = styled.div`\n  box-sizing: border-box;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  margin: 20px auto;\n  padding: 0 20px;\n`;\n\nconst PostTitle = styled.h2`\n  margin-bottom: 0;\n`;\n\nconst PostCreatedAt = styled.p`\n  align-self: flex-end;\n  margin: 0;\n`;\n\nconst PostContent = styled.p`\n  margin: 20px 0;\n`;\n\nexport default function PostPage() {\n  const { id } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const post = useSelector((store) => store.posts.post);\n  const user = useSelector((store) => store.users.user);\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n\n  const handleDelete = () => {\n    dispatch(deletePost(id)).then((res) => {\n      console.log(\"delete\");\n      history.push(\"/\");\n    });\n  };\n\n  return (\n    <Post>\n      {isLoading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <>\n          {user.id === post.user.id && (\n            <div>\n              <button onClick={handleDelete}>delete</button>\n              <Link to={`/edit-post/${id}`}>\n                <button>edit</button>\n              </Link>\n            </div>\n          )}\n          <PostTitle>{post.title}</PostTitle>\n          <PostCreatedAt>\n            <b>寫於：</b>\n            {new Date(post.createdAt).toLocaleString()}\n          </PostCreatedAt>\n          <PostContent>{post.body}</PostContent>\n        </>\n      )}\n    </Post>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { newPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  width: 60%;\n  margin: 0 auto;\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nconst TitleInput = styled.input`\n  width: 300px;\n  margin-left: 20px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst ContentTextarea = styled.textarea`\n  width: 300px;\n  margin-left: 20px;\n`;\n\nconst SubmitButton = styled.button``;\n\nexport default function CreateNewPostPage() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.users.user);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!title || !body) {\n      setErrorMessage(\"Error: title and content are required.\");\n      return;\n    }\n\n    // dispatch 完 thunk 會回傳 promise\n    // 所以就可以 then 下去\n    dispatch(\n      newPost({\n        title,\n        body,\n      })\n    ).then((newPostResponse) => {\n      if (newPostResponse && newPostResponse.id) {\n        history.push(\"/post/\" + newPostResponse.id);\n      }\n    });\n  };\n\n  if (!user) {\n    history.push(\"/\"); // 如果沒有登入就把頁面導向首頁\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title>\n        標題:\n        <TitleInput value={title} onChange={(e) => setTitle(e.target.value)} />\n      </Title>\n      <Content>\n        內容:\n        <ContentTextarea\n          rows={10}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n      </Content>\n      <SubmitButton>發表</SubmitButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getPost, editPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  width: 60%;\n  margin: 0 auto;\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nconst TitleInput = styled.input`\n  width: 300px;\n  margin-left: 20px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst ContentTextarea = styled.textarea`\n  width: 300px;\n  margin-left: 20px;\n`;\n\nconst SubmitButton = styled.button``;\n\nexport default function EditPostPage() {\n  const { id } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const post = useSelector((store) => store.posts.post);\n  const user = useSelector((store) => store.users.user);\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    setTitle(post.title);\n    setBody(post.body);\n  }, [post]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!title || !body) {\n      setErrorMessage(\"Error: title and content are required.\");\n      return;\n    }\n\n    // dispatch 完 thunk 會回傳 promise\n    // 所以就可以 then 下去\n    dispatch(\n      editPost({\n        id,\n        title,\n        body,\n      })\n    ).then((newPostResponse) => {\n      if (newPostResponse && newPostResponse.id) {\n        history.push(\"/post/\" + newPostResponse.id);\n      }\n    });\n  };\n\n  if (!user || user.id !== post.user.id) {\n    history.push(\"/\"); // 如果沒有權限就把頁面導向首頁\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title>\n        標題:\n        <TitleInput value={title} onChange={(e) => setTitle(e.target.value)} />\n      </Title>\n      <Content>\n        內容:\n        <ContentTextarea\n          rows={10}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n      </Content>\n      <SubmitButton>發表</SubmitButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { setAuthToken } from \"../../utils\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../../redux/reducers/userReducer\";\nimport styled from \"styled-components\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 32px;\n  box-sizing: border-box;\n  background-color: white;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0, 0, 0, 0.2);\n  `}\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.users.user);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    dispatch(logout());\n\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>我的第一個 Blog</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to=\"/about\" $active={location.pathname === \"/about\"}>\n            關於\n          </Nav>\n          {user && (\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              發布\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {!user && (\n          <>\n            <Nav to=\"/sign-up\" $active={location.pathname === \"/sign-up\"}>\n              註冊\n            </Nav>\n            <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n              登入\n            </Nav>\n          </>\n        )}\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport SignUpPage from \"../../pages/SignUpPage\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport AboutPage from \"../../pages/AboutPage\";\nimport PostPage from \"../../pages/PostPage\";\nimport CreateNewPostPage from \"../../pages/CreateNewPostPage\";\nimport EditPostPage from \"../../pages/EditPostPage\";\nimport Header from \"../Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMe } from \"../../redux/reducers/userReducer\";\nimport { getAuthToken } from \"../../utils\";\nimport styled from \"styled-components\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // 登入狀態處理\n    if (getAuthToken()) {\n      dispatch(getMe());\n    }\n  }, []);\n\n  return (\n    <Root>\n      <Router>\n        <Header>Header</Header>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/sign-up\">\n            <SignUpPage />\n          </Route>\n          <Route path=\"/post/:id\">\n            <PostPage />\n          </Route>\n          <Route path=\"/new-post\">\n            <CreateNewPostPage />\n          </Route>\n          <Route path=\"/edit-post/:id\">\n            <EditPostPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Root>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./reducers/postReducer\";\nimport userReducer from \"./reducers/userReducer\";\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    users: userReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}